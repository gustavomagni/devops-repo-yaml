stages:
- stage: BuildandPublish
  displayName: Build and Publish
  dependsOn: UnitTest
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - job: BuildandPublish
    displayName: Build and Publish
    pool:
      vmImage: '$(vmImageAZ)'
    steps:
    - checkout: poc-playbooks
    - task: gitversion/setup@0
      displayName: Install GitTools
      inputs:
        versionSpec: '5.6.8'
    - task: gitversion/execute@0
      displayName: Use GitVersion
    - task: Cache@2
      inputs:
        key: 'docker | cache'
        path: /home/vsts/.docker
        cacheHitVar: DOCKER_CACHE_HIT
      displayName: Cache Docker images
    - script: |
        docker load -i /home/vsts/.docker/cache.tar
      displayName: Restore Docker image
      condition: and(not(canceled()), eq(variables.DOCKER_CACHE_HIT, 'true'))
    - task: Cache@2
      inputs:
        key: |
          version2 | gradle | "$(Agent.OS)"
        path: /home/vsts/.gradle/caches/
      displayName: Gradle Caching
    - script: |
        ./gradlew --build-cache build -x test -PartifactId=$(projectId) -Pversion=$(GitVersion.MajorMinorPatch) -Dquarkus.container-image.build=true -Dquarkus.container-image.group=$(containerRegistry) -Dquarkus.container-image.name=$(imageRepository) -Dquarkus.package.type=uber-jar -Dquarkus.jib.base-native-image=registry.access.redhat.com/ubi8/ubi-minimal
        ./gradlew --stop    
      failOnStderr: true 
      displayName: Build
    - task: Cache@2
      inputs:
        key: 'docker | cache'
        path: /home/vsts/.docker
        cacheHitVar: DOCKER_CACHE_HIT
      displayName: Cache Docker images
    - script: |
        mkdir -p /home/vsts/.docker
        docker save -o /home/vsts/.docker/cache.tar $(dockerBaseImage)
      failOnStderr: true
      displayName: Save Docker image
      condition: and(not(canceled()), or(failed(), ne(variables.DOCKER_CACHE_HIT, 'true')))
    - script: |
        ./gradlew --build-cache -PartifactId=$(projectId) -Pversion=$(GitVersion.MajorMinorPatch) -PurlArtifactsMaven=$(urlArtifactsMaven) -PfeedArtifactsMaven=$(feedArtifactsMaven) -PuserPublish=$(organizationName) -PkeyPublish=$(accessTokenMaven) -Dquarkus.package.type=uber-jar publish
      failOnStderr: true
      displayName: Artifacts
    - script: |
        sudo docker tag '$(containerRegistry)/$(imageRepository):$(GitVersion.MajorMinorPatch)' '$(containerRegistry)/$(imageRepository)_hlg:$(GitVersion.MajorMinorPatch)-hlg'
        sudo docker tag '$(containerRegistry)/$(imageRepository):$(GitVersion.MajorMinorPatch)' '$(containerRegistry)/$(imageRepository)_hlg:latest'
      failOnStderr: true
      displayName: Tagging
    - task: Docker@2
      displayName: Push ACR
      inputs:
        containerRegistry: '$(dockerRegistryServiceConnection)'
        repository: '$(imageRepository)_hlg'
        command: 'push'
        tags: '$(GitVersion.MajorMinorPatch)-hlg'
    - task: Docker@2
      displayName: Push ACR latest
      inputs:
        containerRegistry: '$(dockerRegistryServiceConnection)'
        repository: '$(imageRepository)_hlg'
        command: 'push'
        tags: 'latest'