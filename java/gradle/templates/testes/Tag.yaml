stages:
- stage: CheckArtifactandTagging
  displayName: Check Artifact and Tagging
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - job: CheckArtifact
    displayName: Check Artifact
    pool:
      vmImage: '$(vmImageAZ)'
    steps:
    - checkout: poc-playbooks
    - task: gitversion/setup@0
      displayName: Install GitTools
      inputs:
        versionSpec: '5.6.8'
    - task: gitversion/execute@0
      displayName: Use GitVersion
		- task: DownloadPackage@1
			inputs:
				packageType: 'maven'
				feed: '$(feedArtifactsMaven)'
				view: 'Local'
				definition: 'br.com.light:$(projectId)'
				version: '$(GitVersion.MajorMinorPatch)'
				downloadPath: '$(System.ArtifactsDirectory)'
			displayName: Check Artifact
	- job: Tagging
		depensOn: CheckArtifact
		condition: succeeded('CheckArtifact') 
    displayName: Tagging
    pool:
      vmImage: '$(vmImageAZ)'
    steps:
    - checkout: poc-playbooks
    - task: gitversion/setup@0
      displayName: Install GitTools
      inputs:
        versionSpec: '5.6.8'
    - task: gitversion/execute@0
      displayName: Use GitVersion		
		- script: |
				echo "Gerando nova tag"
				git clone https://$(tokenGitHub)@github.com/ArquiteturaCorporativaLight/$(projectId).git
				cd $(projectId)
				git checkout main
				newPatchGitVersion=$(('$(GitVersion.Patch)'+1))
				newTagGitHub='$(GitVersion.Major)'.'$(GitVersion.Minor)'.'$(newPatchGitVersion)'
				git tag -a v'$newTagGitHub' -m "Vers√£o '$(newTagGitHub)'"
				git push origin v'$newTagGitHub'
				echo "Nova tag '$(newTagGitHub)' gerada e validada."
			failOnStderr: true
			displayName: Tagging
	- job: ValidationTag
		depensOn: CheckArtifact
		condition: failed('CheckArtifact') 
    displayName: Validation Tag
    pool:
      vmImage: '$(vmImageAZ)'
    steps:
    - checkout: poc-playbooks
    - task: gitversion/setup@0
      displayName: Install GitTools
      inputs:
        versionSpec: '5.6.8'
    - task: gitversion/execute@0
      displayName: Use GitVersion		
		- script: |
				echo "Tag '$(GitVersion.MajorMinorPatch)' validada."
			failOnStderr: true
			displayName: Validation Tag